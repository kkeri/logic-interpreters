# ----------------------------------------------------------------------------
# Test input file
# ----------------------------------------------------------------------------

.t trivial equations

.th a a
.th {a} a
.th [a] a

# Monotonic boolean laws

.t identity

.th {a {}} a
.th [a []] a

.t annihilator

.th {a []} []
.th [a {}] {}

.t idempotence

.th {a a} a
.th [a a] a

.t associativity

.th {a {b c}} {{a b} c}
.th [a [b c]] [[a b] c]

.t commutativity

.th {a b} {b a}
.th [a b] [b a]

.t absorption

.th {a [a b]} a
.th [a {a b}] a

#.t distributivity

#.th {a [b c]} [{a b} {a c}]
#.th [a {b c}] {[a b] [a c]}

# Inference rules of natural deduction

.t trivial derivation

a
.as a

.t truth introduction

.as {}

.t falsehood elimination
# note: introducing falsehood in the environment would terminate the program
# so we have to do the derivation in isolation.

.so [] a
.as a

.t conjunction introduction

a
b
.as {a b}

.t conjunction elimination

{a b}
.as a
.as b

.t disjunction introduction 1

a
.as [a b]

.t disjunction introduction 2

b
.as [a b]

# Note: disjunction elimination can't be expressed without implication

.t permutation

#.th {a b c} {c b a}
#.th [a b c] [c b a]

.t compound case 1

{a b c}
.as [c d e]

.t compound case 2

#.th [{a b} {a b}] {a b}
#.th [{a b} {c b}] {a b c}
